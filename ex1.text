"""
for cloning with https use "git clone" command
for push use : " git add *" in directory
for adding commit " use git commit -m "your message" "
for push use : git push"
"""

"""
from socket import AF_INET,SOCK_STREAM,socket

sobj = socket(AF_INET,SOCK_STREAM)
sobj.connect(('127.0.0.1',12345))
while True:
    message = sobj.recv(2048)
    if(message == "exit"):
        sobj.close()
        break
    elif(message.decode() == ''):
        pass
    else:
        print(message.decode())

""""""

def simple_print(game: list):
    print_game_card(game)
    for obj in game:
        for char in obj:
            print('{:<5s}'.format(str(char)), end="")
        print("")

Ex2:
fonction 1:
    1) récupérer le tableau créer dans l'exercice 1
    2) récuperer une list a 2D comprenant des coordonnés ex: [[A1, A5]]
    3) après fonction 2 récuperer les coord et verifier la cohérence pour modifier les coord en # ex : A1, A5 == "#####*****"
fonction 2:
    1) Convertir A1 en 1-1 et Z-1 en 26-1
    2) retrouner les case dans une liste 


"""class PythonServerTCP
    fonction initialisation de la socket
    fonction connect
    fonction disconnect
    fonction send
    fonction receivg
    fonction 
    fonction init_map_player

#1) 2 tuple qui doivent être égale
#2) tu créer du tableau a 2Dimension contenant des '*'
#exemple: {3,3} = ***
#                 ***
#                 ***
#3) mininum 10*10
#4) la fonction doit renvoyer des erreurs clair lorsque les conditions ne sont pas rencontrées.
def generate_card(client1_coord: tuple) -> None:
